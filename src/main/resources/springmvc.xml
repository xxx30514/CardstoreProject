<?xml version="1.0" encoding="utf-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-2.5.xsd  http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 掃描控制層組件 -->
	<context:component-scan base-package="cardstore.controller"></context:component-scan>

	<!-- Thymeleaf 視圖解析器 -->
	<bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
		<!-- property name="order" value="1 優先級1 -->
		<property name="order" value="1" />
		<property name="characterEncoding" value="UTF-8" />
		<property name="templateEngine">
			<bean class="org.thymeleaf.spring5.SpringTemplateEngine">
				<property name="templateResolver">
					<bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
						<!-- 視圖前綴 -->
						<property name="prefix" value="/WEB-INF/pages/" />
						<!-- 視圖後綴 -->
						<property name="suffix" value=".html" />
						<property name="templateMode" value="HTML" />
						<property name="characterEncoding" value="UTF-8" />
						<!-- 物理視圖 要存取的實際路徑/WEB-INF/pages/hello.html--> 
						<!-- 邏輯視圖 物理視圖去掉前後綴 hello--> 
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	<!-- 配置預設servlet處理靜態資源  
	當前專案的web.xml的DispatcherServlet與tomcat的web.xml的DefaultServlet url-pattern都是/ 
	會優先以當前專案為的設定為主,但DispatcherServlet無法處理靜態資源
	<mvc:default-servlet-handler/> 瀏覽器發出的所有請求都會經由DefaultServlet處理
	<mvc:default-servlet-handler/>加上<mvc:annotation-driven /> 
	瀏覽器發送的請求會先由DispatcherServlet處理,無法處理再由DefaultServlet處理
	
	**沒有配置的話所有請求都會經過DispatcherServlet 處理 需要配置映射關係@RequestMapping 
	**<mvc:annotation-driven />也需要加上 否則正常請求會出錯
	-->
	<mvc:default-servlet-handler/>
	
	<!-- 存取在WEB-INF內的靜態資源 沒配置resources mapping貌似也可以存取 待確認
	 <mvc:resources mapping="pages/static/**" location="/WEB-INF/pages/static/" />
	 <link rel="stylesheet" th:href="@{pages/static/css/index_work.css}">	
	-->
	
	<!-- 開啟mvc註解驅動 -->
	<mvc:annotation-driven />
	<!-- 視圖控制器:為當前請求路徑 直接設置視圖名稱 實現頁面跳轉 
		若設置了視圖控制器,僅有設置的請求會被處理,其他請求都會404
		必須開啟mvc註解驅動<mvc:annotation-driven />,否則每一個請求都必須設置 
	-->
	<!-- 配置視圖控制器  僅實現跳轉功能可使用 /inedx=>轉跳到index視圖-->
	<mvc:view-controller path="/" view-name="index"></mvc:view-controller>
	<mvc:view-controller path="/index" view-name="index"></mvc:view-controller>
	<mvc:view-controller path="/to/add" view-name="employee_add"></mvc:view-controller>
	
	<!-- 配置文件上傳解析器 並加上commons-fileupload 依賴 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	
	<!-- 配置攔截器filter  -->
	<mvc:interceptors>
	<!-- bean標籤中配置的攔截器預設對DispatcherServlet處理的所有請求進行攔截 -->
	<!-- <bean class="cardstore.filter.FirstInterceptor"></bean> -->
	<mvc:interceptor>
	<!-- 配置需要攔截的請求路徑/**:表示所有請求 /*:單層目錄:專案名/路徑 -->
		<mvc:mapping path="/**"/>
		<!-- 排除攔截的路徑 -->
		<mvc:exclude-mapping path="/abc"/>
		<!-- 攔截器 -->
		<bean class="cardstore.interceptor.FirstInterceptor"></bean>
	</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 配置異常解析器 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
 
    <!-- 配置異常映射關係 -->
    <property name="exceptionMappings">
        <props>
            <!-- key屬性：指定異常類型 -->
            <!-- 文本內容：和異常相關的邏輯視圖,即碰到此類異常跳轉到某頁面 -->
            <prop key="java.lang.ArithmeticException">error</prop>
        </props>
    </property>
 
    <!-- 使用exceptionAttribute屬性:將異常物件存入請求域使用的屬性名 属性配置将异常对象存入请求域时使用的属性名 -->
    <!-- exceptionAttribute屬性預設值是exception value="exception" -->
    <property name="exceptionAttribute" value="ex"/>
	</bean>
	
	
</beans>
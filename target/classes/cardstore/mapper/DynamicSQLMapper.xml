<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cardstore.mapper.DynamicSQLMapper">
<!-- List<Emp> getEmpByCondition(Emp emp); -->

<!-- 動態sql 
	1.if 通過test屬性中的表達式判斷內容是否拼接到sql語句中
	2.where
	2-1.where標籤中有條件成立 自動生成where關鍵字
	2-2.會自動將where內容前多餘的and去除 內容後的去除不掉ex.emp_name = #{empName} and
	2-3.若沒有任何條件成立則where標籤不作用	
	3.trim:標籤加上前綴 去除多餘後綴 也可以加上後綴 去除多餘前綴 較彈性 語法稍微複雜
	<trim prefix="where" suffixOverrides="and">
		<if test="empName !=null and empName !=''">
			emp_name = #{empName}
		</if>
		<if test="empAge !=null and empAge !=''">
			and emp_age = #{empAge}
		</if>
		<if test="empGender !=null and empGender !=''">
			and emp_gender = #{empGender}
		</if>
	</trim>
	4.choose when otherwise 
	相當於if... else if...else
	when至少設置一個 otherwise最多設置一個 僅判斷最先符合的條件
	
	5.foreach 批量新增 批量刪除
	collection:設置要循環的集合或數組
	item:表示數組或集合中的每一個資料
	separator:循環的資料分隔符
	
	6.sql片段 紀錄一段sql
	<sql id="empColumns">
	emp_id,emp_name,emp_age,emp_gender,dept_id
	</sql>
	在需要的地方使用
	<include refid="empColumns"></include>引用sql
 -->
<select id="getEmpByCondition" resultType="Emp">
	select <include refid="empColumns"></include> from t_emp 
	<where>
	<if test="empName !=null and empName !=''">
		emp_name = #{empName}
	</if>
	<if test="empAge !=null and empAge !=''">
		and emp_age = #{empAge}
	</if>
	<if test="empGender !=null and empGender !=''">
		and emp_gender = #{empGender}
	</if>
	</where>
</select>

<!-- List<Emp> getEmpByChoose(Emp emp); -->
<select id="getEmpByChoose" resultType="Emp">
	select * from t_emp 
	<where>
		<choose>
			<when test="empName !=null and empName !=''">
				emp_name = #{empName}
			</when>
			<when test="empAge !=null and empAge !=''">
				emp_age = #{empAge}
			</when>
			<when test="empGender !=null and empGender !=''">
				emp_gender = #{empGender}
			</when>
		</choose>
	</where>
</select>

<!-- void insertMoerEmp(@Param("emps") List<Emp> emps); -->
<insert id="insertMoerEmp" useGeneratedKeys="true" keyProperty="empId">
	insert into t_emp values
	<foreach collection="emps" item="emp" separator=",">
		(null,#{emp.empName},#{emp.empAge},#{emp.empGender},null)
	</foreach>
</insert>

<!-- void deleteMoerEmp(@Param("empIds") Integer[] empIds); -->
<delete id="deleteMoerEmp">
<!-- delete from t_emp where emp_id in
	(
		<foreach collection="empIds" item="empId" separator=",">
			#{empId}
		</foreach>
	) -->
	delete from t_emp where
	<foreach collection="empIds" item="empId" separator="or">
		emp_id = #{empId}
	</foreach>	
</delete>

<sql id="empColumns">
	emp_id,emp_name,emp_age,emp_gender,dept_id
</sql>
</mapper>